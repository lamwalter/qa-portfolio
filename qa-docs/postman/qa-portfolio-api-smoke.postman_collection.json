{
  "info": {
    "name": "QA Portfolio â€” API Smoke",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "GET {{baseUrl}}/users/2",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/users/2",
          "host": ["{{baseUrl}}"],
          "path": ["users", "2"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"status is 200\", () => pm.response.to.have.status(200));",
              "pm.test(\"content-type is json\", () => pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json'));",
              "pm.test(\"responds within 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));",
              "const json = pm.response.json();",
              "pm.test(\"has user id 2\", () => pm.expect(json.id).to.eql(2));",
              "pm.test(\"has name and email\", () => pm.expect(json).to.include.keys('name','email'));"
            ]
          }
        }
      ]
    },
    {
      "name": "POST {{baseUrl}}/posts",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"QA Smoke\",\n  \"body\": \"hello\",\n  \"userId\": 1\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/posts",
          "host": ["{{baseUrl}}"],
          "path": ["posts"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"status is 201\", () => pm.response.to.have.status(201));",
              "pm.test(\"content-type is json\", () => pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json'));",
              "const json = pm.response.json();",
              "pm.test(\"returns id (number)\", () => pm.expect(json.id).to.be.a('number'));",
              "pm.test(\"echoes title\", () => pm.expect(json.title).to.eql('QA Smoke'));"
            ]
          }
        }
      ]
    }
  ],
  "variable": []
}
